spring.application.name=music-store

logging.level.root=INFO

#appender consola
logging.level.org.springframework.web=INFO
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%highlight(%-5level)] [%cyan(%thread)] %magenta(%logger{15}) - %msg%n


#Especificacion de JPA y hibernate - con MySQL con variables de entorno
spring.jpa.hibernate.ddl-auto=create-drop
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true


###  Credentials de la base de datos
#spring.datasource.url=jdbc:mysql://localhost:3307/music-store?createDatabaseIfNotExist=true
#spring.datasource.username=root
#spring.datasource.password=root


spring.datasource.url=jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_NAME}?serverTimezone=America/Bogota
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}


# Logs de Hibernate para depuraciï¿½n
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql=TRACE

# Permite ejecutar scripts SQL al iniciar la app
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always


###  Spring Security
spring.web.cors.allowed-origins=*
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

#Config variables de entorno Cloudinary
cloudinary.cloud_name=${CLOUDINARY_CLOUD_NAME}
cloudinary.api_key=${CLOUDINARY_API_KEY}
cloudinary.api_secret=${CLOUDINARY_API_SECRET}